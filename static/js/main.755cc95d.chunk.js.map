{"version":3,"sources":["utils.ts","components/app/app.tsx","index.tsx"],"names":["checkUpperCase","str","result","split","forEach","letter","toUpperCase","App","useState","password","setPassword","repeatPassword","setRepeatPassword","textError","value","error","setError","className","htmlFor","type","id","onChange","e","target","onClick","preventDefault","length","ReactDOM","render","document","getElementById"],"mappings":"kKAQeA,G,MARQ,SAACC,GACtB,IAAIC,EAAS,EAIb,OAHAD,EAAIE,MAAM,IAAIC,SAAQ,SAACC,GACjBA,EAAOC,gBAAkBD,IAAQH,GAAU,MAE1CA,I,OCkEMK,MA9Df,WACE,MAAgCC,mBAAiB,IAAjD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA4CF,mBAAiB,IAA7D,mBAAOG,EAAP,KAAuBC,EAAvB,KACA,EAA0BJ,mBAAiB,CACzCK,UAAW,GACXC,OAAO,IAFT,mBAAOC,EAAP,KAAcC,EAAd,KA4BA,OACE,sBAAKC,UAAU,MAAf,UACE,qBAAKA,UAAU,YAAf,iFACA,qBAAKA,UAAU,kBAAf,oWAGA,iCACE,wBAAOC,QAAQ,WAAf,iDAEE,uBAAOC,KAAK,OAAOC,GAAG,WAAWC,SAhCjB,SAACC,GACvBN,EAAS,CAAEH,UAAW,GAAIC,OAAO,IACjCJ,EAAYY,EAAEC,OAAOT,QA8B6CA,MAAOL,OAErE,wBAAOS,QAAQ,kBAAf,wGAEE,uBACEC,KAAK,WACLC,GAAG,kBACHC,SAlCoB,SAACC,GAC7BN,EAAS,CAAEH,UAAW,GAAIC,OAAO,IACjCF,EAAkBU,EAAEC,OAAOT,QAiCnBA,MAAOH,OAGX,8BACE,wBAAQQ,KAAK,SAASK,QAlCV,SAACF,GACnBA,EAAEG,iBACsB,IAApBhB,EAASiB,QAA0C,IAA1Bf,EAAee,OAC1CV,EAAS,CAAEH,UAAW,uHAAyBC,OAAO,IAC7CL,EAASiB,OAAS,GAAKf,EAAee,OAAS,EACxDV,EAAS,CAAEH,UAAW,kOAA+CC,OAAO,IACtC,IAA7Bd,EAAeS,GACxBO,EAAS,CAAEH,UAAW,kPAAgDC,OAAO,IACpEL,IAAaE,GACtBK,EAAS,CAAEH,UAAW,sJAA+BC,OAAO,KAyBxD,kGAKJ,qBAAKG,UAAU,YAAf,SAA4BF,EAAMF,gBC7DxCc,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.755cc95d.chunk.js","sourcesContent":["const checkUpperCase = (str: string): number => {\n  let result = 0;\n  str.split('').forEach((letter: string) => {\n    if (letter.toUpperCase() === letter) result += 1;\n  });\n  return result;\n};\n\nexport default checkUpperCase;\n","import React, { useState } from 'react';\nimport './app.sass';\nimport checkUpperCase from '../../utils';\n\ninterface IError {\n  textError: string;\n  value: boolean;\n}\n\nfunction App() {\n  const [password, setPassword] = useState<string>('');\n  const [repeatPassword, setRepeatPassword] = useState<string>('');\n  const [error, setError] = useState<IError>({\n    textError: '',\n    value: false,\n  });\n\n  const handlerPassword = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setError({ textError: '', value: false });\n    setPassword(e.target.value);\n  };\n\n  const handlerRepeatPassword = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setError({ textError: '', value: false });\n    setRepeatPassword(e.target.value);\n  };\n\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    if (password.length === 0 || repeatPassword.length === 0) {\n      setError({ textError: 'Заполните пустые поля', value: true });\n    } else if (password.length < 8 || repeatPassword.length < 8) {\n      setError({ textError: 'Пароль должен содержать не менее 8 символов', value: true });\n    } else if (checkUpperCase(password) !== 1) {\n      setError({ textError: 'Пароль должен содержать одну заглавную букву', value: true });\n    } else if (password !== repeatPassword) {\n      setError({ textError: 'Значения полей не совпадают', value: true });\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"app_title\">Смена пароля</div>\n      <div className=\"app_description\">\n        Пароль должен содержать не менее 8 символов и одну заглавную букву.\n      </div>\n      <form>\n        <label htmlFor=\"password\">\n          Пароль\n          <input type=\"text\" id=\"password\" onChange={handlerPassword} value={password} />\n        </label>\n        <label htmlFor=\"repeat-password\">\n          Повторите пароль\n          <input\n            type=\"password\"\n            id=\"repeat-password\"\n            onChange={handlerRepeatPassword}\n            value={repeatPassword}\n          />\n        </label>\n        <div>\n          <button type=\"submit\" onClick={handleClick}>\n            Сменить пароль\n          </button>\n        </div>\n      </form>\n      <div className=\"app_error\">{error.textError}</div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.sass';\nimport App from './components/app/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}